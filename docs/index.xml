<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>YIO Remote on</title><link>https://yio-remote.github.io/documentation/docs/</link><description>Recent content in YIO Remote on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://yio-remote.github.io/documentation/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Dock</title><link>https://yio-remote.github.io/documentation/docs/hardware/dock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yio-remote.github.io/documentation/docs/hardware/dock/</guid><description>The YIO Dock charges the remote and functions as an IR receiver and blaster.
YIO Dock Hardware USB-C connector (works with all chargers that adhering the USB-C Standard) IR-Receiver (located at the top, let you learn IR codes) 4 IR LEDs (can emit RAW &amp;amp; Pronto HEX IR codes) headphone jack (IR Extender can be connected in parallel to this Port) Powering the YIO dock The YIO dock has an USB-C connector and works with power supplies adhering to the USB-C standard.</description></item><item><title>Remote API</title><link>https://yio-remote.github.io/documentation/docs/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yio-remote.github.io/documentation/docs/api/</guid><description>There&amp;rsquo;s a websocket based API for communicating with the remote, running on port 946(YIO). Mainly used by the web configurator tool and the YIO Dock.
The API automatically starts on power up and is always running in the background. The API is stopped, before wifi is turned off and started, after wifi is turned on.
Messages are sent in JSON format.
Remote Authentication When a client connects, the remote sends a JSON message:</description></item><item><title>Web Interface</title><link>https://yio-remote.github.io/documentation/docs/configuration/web-interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yio-remote.github.io/documentation/docs/configuration/web-interface/</guid><description>YIO will provide you a self hosted, locally available website where you are able to change the configuration of your Setup.
Following features are currently planned:
Display config.json - View your actual used config.json file DownloadÂ config.json - make an easy backup of the complete remote config Modify config.json - Easy edit of the file from every browser in local Network Setup Wizard - Answere short Questions and build the config.</description></item><item><title>Remote</title><link>https://yio-remote.github.io/documentation/docs/hardware/remote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yio-remote.github.io/documentation/docs/hardware/remote/</guid><description>The YIO remotes is designed as HID for all kind of SmartHome backend Systems and SmartHome devices. More Information about supported Integrations can be found in the menu.
YIO Remote Hardware based on a Raspberry Pi Zero W (used as mainboard and provides connections via Wi-Fi and Bluetooth) 13 customizable physical buttons (2 different functions at each button can be assigned) 3.5&amp;quot; high resolution capacitive touchsreen (480x800px resolution) ambient light sensor (detects you light scenario and dims / brightens the display) battery monitoring (charge, health &amp;amp; voltage) custom designed housing (CNC milled, sandblasted and anodized) gesture sensor (detects you and switches on the display) haptic feedback motor (gives vibrating feedback) proximity sensor (detects proximity and switches on the display) YIO Remote Software The Project is based on a custom buildroot system with UI designed and programmed in Qt Open Source.</description></item><item><title>Frequently Asked Questions</title><link>https://yio-remote.github.io/documentation/docs/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yio-remote.github.io/documentation/docs/faq/</guid><description>Can I update the Dock Firmware manually? Yes, you need to compile or download a new dock firmware image. Then use curl to push the firmware to the dock with the following command:
curl -F &amp;quot;file=@firmware.bin&amp;quot; http://&amp;lt;Dock IP&amp;gt;/update You can also use ESPHome-Flasher to update the firmware via USB.
How can I change the timezone or set the time manually? remote-os v2 The default system timezone is set to UTC.</description></item><item><title>Supporters</title><link>https://yio-remote.github.io/documentation/docs/supporters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yio-remote.github.io/documentation/docs/supporters/</guid><description>Big thanks to the following supporters who pledged on Kickstarter to support the project!
Gabor Balint Ian benjinho Maximilian Franzke Anakyn Labs intelliweights Vito Telischak Victor Rasmussen The Creative Fund by BackerKit If you like the project, consider donating :) Buy us a coffee</description></item></channel></rss>